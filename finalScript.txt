<!DOCTYPE html>
<head>
  <meta charset="utf-8">
  <script src="https://d3js.org/d3.v4.min.js"></script>
  <script src="https://d3js.org/topojson.v2.min.js"></script>
  <style>
    body { margin:0;position:fixed;top:0;right:0;bottom:0;left:0; }
    
            body {
            margin: 0;
            position: fixed;
            top: 0;
            right: 0;
            bottom: 0;
            left: 0;
        }

        .states {
            fill: gray;
            fill-opacity: .5;
        }

        .states :hover {
            fill: red;
        }

        .state-borders {
            fill: none;
            stroke: rgb(255, 255, 255);
            stroke-width: 0.5px;
            stroke-linejoin: round;
            stroke-linecap: round;
            pointer-events: none;
        }
  </style>
</head>

<body>
  <script>
    // Feel free to change or delete any of the code you see in this editor!
    
    
    var width = 960
    		height = 500
    
    var svg = d3.select("body").append("svg")
      .attr("width", width)
      .attr("height", height)  
        
    var projection = d3.geoAlbersUsa()
      .scale(1280)
      .translate([width / 2, height / 2])    
    
    var path = d3.geoPath()

    d3.json("https://d3js.org/us-10m.v1.json", function (error, us) {
    	if (error) throw error;

            svg.append("g")
                .attr("class", "states")
                .selectAll("path")
                .data(topojson.feature(us, us.objects.states).features)
                .enter().append("path")
                .attr("d", path);

            svg.append("path")
                .attr("class", "state-borders")
                .attr("d", path(topojson.mesh(us, us.objects.states, function (a,b) { return a !== b; })));
       });
  d3.json("https://raw.githubusercontent.com/pierramo/rossettiD3/master/data_3.json", function(data){
  
  var scale = d3.scaleLinear()
  	.domain([1, 10])
  	.range([50, width-50]);
    
  var color = d3.scaleLinear()
  	.domain([1, 99])
  	.range(["green", "red"]);
  
  //console.log(scale(50))
    
    var circle = svg.selectAll("circle")
    	.data(data)
      .enter().append("circle")

// 		var circle = svg.append("circle")
    
//    var item = d3.select("circle:nth-child(1)").datum()   
//    console.log(item)
   
    circle
    .attr("cx", function(d){
      return projection(d.coordinates)[0];
    })
    .attr("cy", function(d){
      return projection(d.coordinates)[1];
    })
    .attr("r", 40)
    .attr("fill","steelblue")
    .attr("fill-opacity", 0.5)
    
     
//      circle
//      	.transition()
//      	.attr("cx", function(){
//        return Math.random()*width
//      })
	})
  </script>
</body>
