///SETTING UP THE MAP SVG
  <head>
  <meta charset="utf-8">
  <script src="https://d3js.org/d3.v4.min.js"></script>
  <script src="https://d3js.org/topojson.v2.min.js"></script>
  <style>
    body { margin:0;position:fixed;top:0;right:0;bottom:0;left:0; }
    
            body {
            margin: 0;
            position: fixed;
            top: 0;
            right: 0;
            bottom: 0;
            left: 0;
        }

        .states {
            fill: gray;
            fill-opacity: .5;
        }

        .states :hover {
            fill: red;
        }

        .state-borders {
            fill: none;
            stroke: rgb(255, 255, 255);
            stroke-width: 0.5px;
            stroke-linejoin: round;
            stroke-linecap: round;
            pointer-events: none;
        }
  </style>
</head>

<body>
  <script>
////FIRST SET CANVAS AS MAP SEE ABOVE
	var width= 960 
	var height= 600
  //where do you get this pixel canvas from map
    
	var svg = d3.select("body") .append("svg")
  .attr("width", width)
  .attr("height", height)
  
////SET MAP DATA
      var projection = d3.geoAlbersUsa()
      .scale(1280)
      .translate([width / 2, height / 2]) 
      
			var svg = d3.select("svg")
			var path = d3.geoPath()

    d3.json("https://d3js.org/us-10m.v1.json", function (error, 		us) {
    if (error) throw error;

    svg.append("g")
       .attr("class", "states")
       .selectAll("path")
 .data(topojson.feature(us,us.objects.states).features)
      .enter().append("path")
    	.attr("d", path);

     svg.append("path")
        .attr("class", "state-borders")
        .attr("d", path(topojson.mesh(us, us.objects.states, function (a,b) { return a !== b; })))
       })
    
    
//  TBD CONNECTING TO USGS/ PROJECTION TO CANVAS
///d3.usgs("http://earth	uake.usgs.gov/earthquakes/feed/geojsonp/2.5/week?callback=eqfeed_callback",function(raw){
//       var data=raw["features"].map(function(d){
//         return {"magnitude": d["properties"]["mag"],"coordinates":d["geometry"]}}
//           .filter(function(d){return projection(d.coordinates)!==null;
//                              }))
     
  ////DATA SET 3 Magnitude Distribution 
  ///[magnitude (m) + coordinates (x)(y)]
  d3.json ("https://raw.githubusercontent.com/Clanda9/rossettiD3/master/data_3.json",function(data) {
    var scale=d3.scaleLinear()
 			.domain([1,10])//range of data
  		.range([0,200])//

   var circle=svg.selectAll("circle")
   		.data(data)
   		.enter().append("circle")
    
    circle
	    .attr("cx", function(d){
      return projection(d.coordinates)[0]
  	  })  
			.attr("cy", function(d){
      return projection(d.coordinates)[1]
  	  })  						
    	.attr("r", function(d){
       return scale(d.magnitude)     
            })	        	
    	.attr("fill","steelblue")
    	.attr("fill-opacity", .5)	
      
    ///ANIMATE
    	.on("mouseover", function(d){
      d3.select(this)
      	.attr("fill-opacity",1)
    })
        .on("mouseout", function(d){
      d3.select(this)
      	.attr("fill-opacity",.5)
       })
  
  })
  
  
  

  </script>
</body>



